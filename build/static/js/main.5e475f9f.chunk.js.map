{"version":3,"sources":["components/statistics/amount/Amount.module.css","components/statistics/section/Section.module.css","components/statistics/buttons/Button.module.css","components/statistics/container/Container.module.css","components/statistics/notifications/Notifications.module.css","components/statistics/amount/Amount.js","components/statistics/buttons/Buttons.js","components/statistics/container/Container.js","components/statistics/notifications/Notifications.js","components/statistics/section/Section.js","components/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","percent","className","styles","list","item","Controls","options","clickHandler","map","option","feedbackType","btn","data-action","onClick","propTypes","PropTypes","arrayOf","string","isRequired","func","Container","children","container","Notification","message","notification","Section","title","section","App","state","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","handleFeedback","target","dataset","action","setState","prevState","blur","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e475f9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Amount_list__7HlJV\",\"item\":\"Amount_item__2lsVH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__b6TG6\",\"title\":\"Section_title__3VYuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1JTdl\",\"feedbackBtns\":\"Button_feedbackBtns__3v4UG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3ehvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notifications_notification__2vqKa\"};","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Amount.module.css\";\r\n\r\nfunction Statistics({ good, neutral, bad, total, percent }) {\r\n    return (\r\n        <Fragment>\r\n            <ul className={styles.list}>\r\n                <li className={styles.item}>Good: {good}</li>\r\n                <li className={styles.item}>Neutral: {neutral}</li>\r\n                <li className={styles.item}>Bad: {bad}</li>\r\n                <li className={styles.item}>Total: {total}</li>\r\n                <li className={styles.item}>Positive feedback: {percent}%</li>\r\n            </ul>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    percent: PropTypes.number.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst btn = ({ feedbackType, clickHandler }) => {\r\n    return (\r\n        <button\r\n            className={styles.btn}\r\n            key={feedbackType}\r\n            data-action={feedbackType}\r\n            onClick={clickHandler}\r\n        >\r\n            {feedbackType}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport const Controls = ({ options, clickHandler }) => {\r\n    return options.map(option => btn({ feedbackType: option, clickHandler }));\r\n}\r\n\r\n\r\n\r\nControls.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    clickHandler: PropTypes.func.isRequired,\r\n};","import styles from \"./Container.module.css\";\r\n\r\nexport const Container = ({ children }) => {\r\n    return <div className={styles.container}>{children}</div>;\r\n}","import React from \"react\";\r\nimport styles from \"./Notifications.module.css\";\r\n\r\nexport const Notification = ({ message }) => {\r\n    return <div className={styles.notification}>{message}</div>;\r\n}","import React from \"react\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nexport const Section = ({ title, children }) => {\r\n    return (\r\n        <section className={styles.section}>\r\n            <p className={styles.title}>{title}</p>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Statistics from './statistics/amount/Amount';\r\nimport { Controls } from './statistics/buttons/Buttons';\r\nimport { Container } from './statistics/container/Container';\r\nimport { Notification } from './statistics/notifications/Notifications';\r\nimport { Section } from './statistics/section/Section';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    };\r\n\r\n    countTotalFeedback = () => {\r\n        const { good, neutral, bad } = this.state;\r\n        return good + neutral + bad;\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const { good } = this.state;\r\n        const total = this.countTotalFeedback();\r\n        return total ? +((good / total) * 100).toFixed(0) : 0;\r\n    };\r\n\r\n    handleFeedback = ({ target }) => {\r\n        const feedbackType = target.dataset.action;\r\n        this.setState(prevState => ({\r\n            [feedbackType]: prevState[feedbackType] + 1,\r\n        }));\r\n        target.blur();\r\n    };\r\n\r\n    render() {\r\n        const { good, neutral, bad } = this.state;\r\n        const options = ['good', 'neutral', 'bad'];\r\n\r\n        return (\r\n            <Container>\r\n                <Section title=\"Please leave feedback\">\r\n                    <Controls options={options} clickHandler={this.handleFeedback} />\r\n                </Section>\r\n                <Section title=\"Statistics\">\r\n                    {this.countTotalFeedback() !== 0 ? (\r\n                        <Statistics\r\n                            good={good}\r\n                            neutral={neutral}\r\n                            bad={bad}\r\n                            total={this.countTotalFeedback()}\r\n                            percent={this.countPositiveFeedbackPercentage()}\r\n                        />\r\n                    ) : (\r\n                            <Notification message=\"No feedback given\" />\r\n                        )}\r\n                </Section>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}